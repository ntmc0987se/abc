local repo = "https://raw.githubusercontent.com/ntmc0987se/abc/refs/heads/main/"
local Library = loadstring(game:HttpGet(repo .. "a"))()
local ThemeManager = loadstring(game:HttpGet(repo .. "b"))()
local SaveManager = loadstring(game:HttpGet(repo .. "c"))()

Library.ForceCheckbox = false
Library.ShowToggleFrameInKeybinds = true
local Options = Library.Options
local Toggles = Library.Toggles

Library.ForceCheckbox = false -- Forces AddToggle to AddCheckbox
Library.ShowToggleFrameInKeybinds = true -- Make toggle keybinds work inside the keybinds UI (aka adds a toggle to the UI). Good for mobile users (Default value = true)
local Window = Library:CreateWindow({
	Title = "srcx",
	Footer = "",
	Icon = 121540426725092,
	NotifySide = "Right",
	ShowCustomCursor = true,
})

local Tabs = {
	Main = Window:AddTab("Main", "user"),
	["UI Settings"] = Window:AddTab("UI Settings", "settings"),
}

-- TAB: Main
local MainGroup = Tabs.Main:AddLeftGroupbox("General Settings", "boxes")

-- 2 Multi Dropdowns
MainGroup:AddDropdown("Seeds", {
	Values = { "Eggplant", "Watermelon", "Carrot", "Carnivorous","cocotank","tomatrio" },
	Default = 1,
	Multi = true,
	Text = "Seeds",
	Callback = function(Value)
		_G.Seeds = Value
	end,
})

MainGroup:AddDropdown("Gears", {
	Values = { "Water Bucket", "Banana Gun", "Frost Grenade" },
	Default = 1,
	Multi = true,
	Text = "Gears",
	Callback = function(Value)
		_G.Gears = Value
	end,
})
MainGroup:AddToggle("aaaaaaaaa", {
	Text = "aaaaaaaaaaaa",
	Default = false,
	Callback = function(Value)
		if Value == true then
			print(_G.Gears)
		end
	end,
})
MainGroup:AddToggle("AutobuySeeds", {
	Text = "Auto buy seeds",
	Default = true,
	Callback = function(Value)
		_G.AutobuySeeds = Value
	end,
})

MainGroup:AddToggle("Autobuygears", {
	Text = "Auto buy gears",
	Default = false,
	Callback = function(Value)
		if Value == true then
			while wait(3) do
				local args
				for i,v in pairs(_G.Gears) do
					if v == "Frost Grenade" then
				args = {-- buy frost grenade
					{
						"Frost Grenade",
						"\026"
					}
				}
				game:GetService("ReplicatedStorage"):WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
			elseif v == "Banana Gun" then
				args = {-- buy banana gun
					{
						"Banana Gun",
						"\026"
					}
				}
				game:GetService("ReplicatedStorage"):WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
			elseif v == "Water Bucket" then
				args = { -- buy water bucket
					{
						"Water Bucket",
						"\026"
					}
				}
				game:GetService("ReplicatedStorage"):WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
			end
		end
			end
		end
	end,
})


-- TAB: UI Settings
local MenuGroup = Tabs["UI Settings"]:AddLeftGroupbox("Menu", "wrench")

MenuGroup:AddToggle("KeybindMenuOpen", {
	Default = Library.KeybindFrame.Visible,
	Text = "Open Keybind Menu",
	Callback = function(value)
		Library.KeybindFrame.Visible = value
	end,
})
MenuGroup:AddToggle("ShowCustomCursor", {
	Text = "Custom Cursor",
	Default = true,
	Callback = function(Value)
		Library.ShowCustomCursor = Value
	end,
})
MenuGroup:AddDropdown("NotificationSide", {
	Values = { "Left", "Right" },
	Default = "Right",
	Text = "Notification Side",
	Callback = function(Value)
		Library:SetNotifySide(Value)
	end,
})
MenuGroup:AddDropdown("DPIDropdown", {
	Values = { "50%", "75%", "100%", "125%", "150%", "175%", "200%" },
	Default = "100%",
	Text = "DPI Scale",
	Callback = function(Value)
		Value = Value:gsub("%%", "")
		local DPI = tonumber(Value)
		Library:SetDPIScale(DPI)
	end,
})
MenuGroup:AddDivider()
MenuGroup:AddLabel("Menu bind")
	:AddKeyPicker("MenuKeybind", { Default = "RightShift", NoUI = true, Text = "Menu keybind" })

MenuGroup:AddButton("Unload", function()
	Library:Unload()
end)

Library.ToggleKeybind = Options.MenuKeybind

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

SaveManager:IgnoreThemeSettings()

SaveManager:SetIgnoreIndexes({ "MenuKeybind" })

ThemeManager:SetFolder("MyScriptHub")
SaveManager:SetFolder("MyScriptHub/specific-game")
SaveManager:SetSubFolder("specific-place")

SaveManager:BuildConfigSection(Tabs["UI Settings"])

ThemeManager:ApplyToTab(Tabs["UI Settings"])

SaveManager:LoadAutoloadConfig()











